#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞ Redis
"""

import asyncio
import os
from redis_cache import get_redis_client, close_redis_client

async def clear_cache():
    """–û—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å –∫–µ—à Redis"""
    try:
        redis_client = await get_redis_client()
        
        # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–ª—é—á–∏
        keys = await redis_client.keys("*")
        
        if keys:
            # –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–ª—é—á–∏
            await redis_client.delete(*keys)
            print(f"‚úÖ –û—á–∏—â–µ–Ω–æ {len(keys)} –∫–ª—é—á–µ–π –∏–∑ –∫–µ—à–∞")
        else:
            print("‚ÑπÔ∏è –ö–µ—à —É–∂–µ –ø—É—Å—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–µ—à–∞: {e}")
    finally:
        await close_redis_client()

async def show_cache_stats():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ—à–∞"""
    try:
        redis_client = await get_redis_client()
        
        # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–ª—é—á–∏
        keys = await redis_client.keys("*")
        
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞:")
        print(f"   –í—Å–µ–≥–æ –∫–ª—é—á–µ–π: {len(keys)}")
        
        if keys:
            # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–∏ –ø–æ –ø—Ä–µ—Ñ–∏–∫—Å—É
            key_groups = {}
            for key in keys:
                prefix = key.split(':')[0] if ':' in key else 'other'
                key_groups[prefix] = key_groups.get(prefix, 0) + 1
            
            print(f"   –ì—Ä—É–ø–ø—ã –∫–ª—é—á–µ–π:")
            for prefix, count in key_groups.items():
                print(f"     {prefix}: {count}")
                
            # –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–ª—é—á–µ–π
            print(f"   –ü—Ä–∏–º–µ—Ä—ã –∫–ª—é—á–µ–π:")
            for key in keys[:5]:
                ttl = await redis_client.ttl(key)
                print(f"     {key} (TTL: {ttl}s)")
            if len(keys) > 5:
                print(f"     ... –∏ –µ—â–µ {len(keys) - 5} –∫–ª—é—á–µ–π")
        else:
            print("   –ö–µ—à –ø—É—Å—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    finally:
        await close_redis_client()

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import sys
    
    if len(sys.argv) > 1 and sys.argv[1] == "stats":
        await show_cache_stats()
    else:
        print("üßπ –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ Redis...")
        await clear_cache()
        print("‚úÖ –ì–æ—Ç–æ–≤–æ!")

if __name__ == "__main__":
    asyncio.run(main()) 